# remove all R objects in the working directory
rm(list=ls(all=TRUE))
#Increase memory size (java out of memory and must be before pkg load)
options(java.parameters = "-Xmx15000m")
# id packages
packages <- c("plyr","dplyr","readxl", "zoo",  "stringi", "ggplot2","tidyr","stringr")
#install and library
lapply(packages, require, character.only = TRUE)
#set folders
proj_name = "IAVA Scorecard"
base_path="C:/Users/Stephen.M.Trask/Documents"
severity_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA Severity Summary Reports CSV Format"
summary_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA Summary Reports CSV Format"
archive_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA SCORECARD ARCHIVE DATA"
report="S:/CISO/ACAS/ACAS IAVA Reports"
code.plc='H:/Code Source/IAVA_Aggregation_Reporting'
load(file.path(code.plc,"IAVA_WORKSPACE.RData"))
############################################# REMOVE DATA
dir.create(file.path(severity_data, sev.max.date), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(summary_data, sum.max.date), showWarnings = FALSE, recursive = FALSE, mode = "0777")
newsumfldr=file.path(summary_data, sum.max.date)
for (i in summary.files){
file.copy(file.path(summary_data,i), file.path(newsumfldr, i),overwrite = T,copy.mode = TRUE, copy.date = TRUE)
file.remove(file.path(summary_data,i))
}
newsevfldr=file.path(severity_data, sev.max.date)
for (i in severity.files){
file.copy(file.path(severity_data,i), file.path(newsevfldr, i),overwrite = T,copy.mode = TRUE, copy.date = TRUE)
file.remove(file.path(severity_data,i))
}
##########################   Send Mail Option   #########################################
library(mailR)
# d <- weekdays(as.Date(date))
recipients <- c("victor.f.sorano.mil@mail.mil", "janice.a.stewart2.civ@mail.mil", "kenneth.d.stamm.ctr@mail.mil", "charles.m.grimm.civ@mail.mil")
cc_list <- c("stephen.m.trask.ctr@mail.mil", "adrian.l.farquhar.ctr@mail.mil")
sub=paste("IAVA Briefing, dated ", sum.max.date, sep="")
body=paste("A new IAVA Briefing has been created, dated ", sum.max.date, " The file is located on the SP 2010 Site.  https://rhca.amedd.army.mil/department/BI/Pages/Cyber-Security-Projects.aspx ",sep = "")
send.mail(from = "IAVA Update <strask@tiag.net>",
to = recipients,
cc = cc_list,
subject = sub,
body = body,
smtp = list(host.name = "smtp.gmail.com", port = 25, user.name = "strask@tiag.net", passwd = "st2583990", ssl = TRUE),
authenticate = TRUE,
send = TRUE,
#attach.files = c(filename),
# file.names = c(filename), # optional parameter
# file.descriptions = c("Current IAVA Status"), # optional parameter
debug = TRUE)
# remove all R objects in the working directory
rm(list=ls(all=TRUE))
#Increase memory size (java out of memory and must be before pkg load)
options(java.parameters = "-Xmx15000m")
# id packages
packages <- c("plyr","dplyr","readxl", "zoo",  "stringi", "ggplot2","tidyr","stringr")
#install and library
lapply(packages, require, character.only = TRUE)
#set folders
proj_name = "IAVA Scorecard"
base_path="C:/Users/Stephen.M.Trask/Documents"
severity_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA Severity Summary Reports CSV Format"
summary_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA Summary Reports CSV Format"
archive_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA SCORECARD ARCHIVE DATA"
report="S:/CISO/ACAS/ACAS IAVA Reports"
code.plc='H:/Code Source/IAVA_Aggregation_Reporting'
#set project path
proj_path = paste(base_path,"/",proj_name,sep = "")
out_path = file.path(proj_path, "Output")
cleaned_path = file.path(proj_path, "CleanData")
data_path = file.path(proj_path, "RawData")
Outlier_Path  = file.path(proj_path, "Outliers")
Asset_path="S:/CISO/ACAS/ACAS IAVA Reports/Current Asset Numbers/Total Assets by HRP.xlsx"
load(file.path(report,"IAVA_WORKSPACE.RData"))
# remove all R objects in the working directory
rm(list=ls(all=TRUE))
#Increase memory size (java out of memory and must be before pkg load)
options(java.parameters = "-Xmx15000m")
# id packages
packages <- c("plyr","dplyr","readxl", "zoo",  "stringi", "ggplot2","tidyr","stringr")
#install and library
lapply(packages, require, character.only = TRUE)
#set folders
proj_name = "PMB Capture"
base_path="U:/NRMC/Data Science"
pmb_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA SCORECARD ARCHIVE DATA"
sharepoint='Y:/'
file.copy(file.path(report, filename), file.path(fldr),overwrite = T,copy.mode = TRUE, copy.date = TRUE)
#set project path
proj_path = paste(base_path,"/",proj_name,sep = "")
share_path = paste(sharepoint,"/",proj_name,sep = "")
#Other folders needed
out_path = file.path(proj_path, "Output")
cleaned_path = file.path(proj_path, "CleanData")
data_path = file.path(proj_path, "RawData")
#make folders
dir.create(file.path(proj_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(out_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(cleaned_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(data_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(share_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
#Get Date
date <- Sys.Date()
Offices<-c('CBO','CMIO','CTO','ISSM','PMO')
for (i in offices) {
tmp = paste(data_path,"/",i,sep = "")
dir.create(file.path(tmp), showWarnings = FALSE, recursive = FALSE, mode = "0777")
}
for (i in Offices) {
tmp = paste(data_path,"/",i,sep = "")
dir.create(file.path(tmp), showWarnings = FALSE, recursive = FALSE, mode = "0777")
}
# remove all R objects in the working directory
rm(list=ls(all=TRUE))
#Increase memory size (java out of memory and must be before pkg load)
options(java.parameters = "-Xmx15000m")
# id packages
packages <- c("plyr","dplyr","readxl", "zoo",  "stringi", "ggplot2","tidyr","stringr")
#install and library
lapply(packages, require, character.only = TRUE)
#set folders
proj_name = "PMB Capture"
base_path="U:/NRMC/Data Science"
pmb_data=""
sharepoint='Y:'
#set project path
proj_path = paste(base_path,"/",proj_name,sep = "")
share_path = paste(sharepoint,"/",proj_name,sep = "")
#Other folders needed
out_path = file.path(proj_path, "Output")
cleaned_path = file.path(proj_path, "CleanData")
data_path = file.path(proj_path, "RawData")
#make folders
dir.create(file.path(proj_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(out_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(cleaned_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(data_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(share_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
#Get Date
date <- Sys.Date()
#Get File names
pmb.files <- list.files(pmb_data, pattern="*.csv", recursive = T, full.names=F, all.files = T, include.dirs = T)
pmb.files <- list.files(data_path, pattern="*.csv", recursive = T, full.names=F, all.files = T, include.dirs = T)
pmb.files
entry.year<-stri_sub(pmb.files[1], -24,-20)
entry.month<-stri_sub(pmb.files[1], -19, -16)
entry.year<-stri_sub(pmb.files[1], -23,-20)
entry.month<-stri_sub(pmb.files[1], -18, -16)
entry.office<-stri_sub(pmb.files[1], 1, 4)
entry.office<-stri_sub(pmb.files[1], 1, 4) %>% gsub("/","")
entry.office<-stri_sub(pmb.files[1], 1, 4)
# remove all R objects in the working directory
rm(list=ls(all=TRUE))
#Increase memory size (java out of memory and must be before pkg load)
options(java.parameters = "-Xmx15000m")
# id packages
packages <- c("plyr","dplyr","readxl", "zoo",  "stringi", "ggplot2","tidyr","stringr")
#install and library
lapply(packages, require, character.only = TRUE)
#set folders
proj_name = "IAVA Scorecard"
base_path="C:/Users/Stephen.M.Trask/Documents"
severity_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA Severity Summary Reports CSV Format"
summary_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA Summary Reports CSV Format"
archive_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA SCORECARD ARCHIVE DATA"
report="S:/CISO/ACAS/ACAS IAVA Reports"
code.plc='H:/Code Source/IAVA_Aggregation_Reporting'
#set project path
proj_path = paste(base_path,"/",proj_name,sep = "")
out_path = file.path(proj_path, "Output")
cleaned_path = file.path(proj_path, "CleanData")
data_path = file.path(proj_path, "RawData")
Outlier_Path  = file.path(proj_path, "Outliers")
Asset_path="S:/CISO/ACAS/ACAS IAVA Reports/Current Asset Numbers/Total Assets by HRP.xlsx"
dir.create(file.path(proj_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(out_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(cleaned_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(data_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(Outlier_Path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
#Get Date
age= 100
date <- Sys.Date()
#Get File names
severity.files <- list.files(severity_data, pattern="*.csv", recursive = F, full.names=F, all.files = T, include.dirs = T)
summary.files <- list.files(summary_data, pattern="*.csv", recursive = F, full.names=F, all.files = T, include.dirs = T)
severity=as.data.frame(matrix( ,0,3))
summary=as.data.frame(matrix( ,0,4))
#nvl=as.data.frame(matrix( ,0,2))
#no.Vulnerabilities =matrix( ,0,2)
no.Vulnerabilities.lst=as.list(NULL)
#BIND ALL FILES
for (i in  severity.files){
#i=severity.files[1]
df<- read.csv(file.path(severity_data, i), header = TRUE, sep = ",", quote = "\"", fill = TRUE, comment.char = "")
#df<- read.csv(i, header = TRUE, sep = ",", quote = "\"", fill = TRUE, comment.char = "")
df$HRP.name <- sub(" IAVA Severity for Alerts.csv","",i)
#df$HRP.name <- sub(" Severity Summary for Alerts.csv","",i)
df$As.of.Date=file.mtime(file.path(severity_data, i)); df$As.of.Date=(format(df$As.of.Date,"%d-%b-%Y"))
severity=as.data.frame(rbind(severity,df))
}
severity$HRP.name=gsub("Regional Health Command - Atlantic", "RHC-A (P) HQ", severity$HRP.name, ignore.case = FALSE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)
#severity$HRP.name=gsub("RHC -A", "RHC-A (P) HQ", severity$HRP.name, ignore.case = FALSE, perl = FALSE,
#                       fixed = FALSE, useBytes = FALSE)
severity$HRP.name=gsub("Ft. Myers Severity Summary for Alerts.csv", "Ft. Myers", severity$HRP.name, ignore.case = FALSE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)
severity$As.of.Date=as.POSIXct(severity$As.of.Date, format = "%d-%b-%Y")
sev.max.date=max(severity$As.of.Date)
for (i in  summary.files){
#i=summary.files[1]
df<- read.csv(file.path(summary_data, i), header = TRUE, sep = ",", quote = "\"", fill = TRUE, comment.char = "")
#df<- read.csv(i, header = TRUE, sep = ",", quote = "\"", fill = TRUE, comment.char = "")
if(nrow(df)>0) {
df$HRP.name <- sub(" IAVA Summary for Alerts.csv","",i)
df$As.of.Date=file.mtime(file.path(summary_data, i))
df$As.of.Date=(format(df$As.of.Date,"%d-%b-%Y"))
df$IAVM.Count=length(unique(df$IAVM))
} else {
no.Vulnerabilities.lst= c(sub(" IAVA Summary for Alerts.csv","",i), no.Vulnerabilities.lst)
print("no data")
}
summary=rbind(summary,df)
#no.Vulnerabilities =rbind(nvl,no.Vulnerabilities )
}
summary$HRP.name=gsub("Regional Health Command - Atlantic", "RHC-A (P) HQ", summary$HRP.name, ignore.case = FALSE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)
#summary$HRP.name=gsub("RHC -A (P) HQ", "RHC-A (P) HQ", summary$HRP.name, ignore.case = FALSE, perl = FALSE,
#                      fixed = FALSE, useBytes = FALSE)
summary$HRP.name=gsub("Ft. Myers Severity Summary for Alerts.csv", "Ft. Myers", summary$HRP.name, ignore.case = FALSE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)
summary$As.of.Date=as.POSIXct(summary$As.of.Date, format = "%d-%b-%Y")
sum.max.date=max(summary$As.of.Date)
#CREATE BACKUPS
write.csv(severity, file.path(archive_data,paste("Severity Data as of ", date, ".csv",sep="")))
write.csv(summary, file.path(archive_data,paste("Summary Data as of ", date, ".csv",sep="")))
nam=paste("HRPs with NO Vulnerabilities greater 21 days as of ", date,".txt",sep="")
dput(no.Vulnerabilities.lst, file = file.path(archive_data,"Current HRP with No Vulnerabilities post 21 days.txt"))
save(summary, file = file.path(report,"summary.rds"))
save(severity, file = file.path(report,"severity.rds"))
summary.bu=summary
severity.bu=severity
#summary=summary[1:1505, ]
#summary=summary.bu
#severity=severity.bu
#Summary Charts
#Collect Data for Calcs
######ADD REGION ROLL UP
Site<-c("GAHC","IRACH","KACC","KACH","KAHC","MCAHC","RHC-A (P) HQ","WAMC","BACH","EAMC","FAHC","LAHC","MFACH","WINN","DAHC","BMACH","ARHC","FTDTL","KUSAHC","ALL")
HRP.name<-c("Ft. Drum","Ft. Knox","Ft. Meade","West Point","Ft. Lee","Ft. Eustis","RHC -A (P) HQ","Ft. Bragg","Ft. Campbell","Ft. Gordon","Redstone","Ft. Rucker","Ft. Jackson","Ft. Stewart","Carlisle Barracks","Ft. Benning","Ft. Myers","FTDTL","Kirk APG","Region (ALL HRPs)")
Facility<-c("CLINIC","HOSP","CLINIC","HOSP","CLINIC","CLINIC","HQ","MEDCEN","HOSP","MEDCEN","CLINIC","CLINIC","HOSP","HOSP","","HOSP","","","","ALL")
UIC<-c("W4U2AA","W2LAAA","W6F2AA","W2H8AA","W2LMAA","W2K1AA","W07TAA","W2L6AA","W2L8AA","W3QMAA","W2FLAA","W2MQAA","W2MJAA","W2MSAA","","W2L3AA","","","","ROLL UP")
Short<-c("DRUM","KNOX","MEADE","WEST POINT","LEE","EUSTIS","RHC-A","BRAGG","CAMPBELL","GORDON","REDSTONE","RUCKER" ,"JACKSON","STEWART","CARLISLE","BENNING","MYERS","FTDTL","KIRK","REGION")
SiteCode<-c("N03","N04","N05","N13","N12","N11","N18","N10","S05","S03","S07","S08","S06","S09","N14", "S04", "N05 / N18", "N17","N06","NN")
Rollup <- as.data.frame(cbind(Site,HRP.name,Facility,UIC,Short,SiteCode))
##Asset data
assets<-read_excel(Asset_path, sheet = 1, col_names = TRUE, col_types = NULL, na = "",skip = 0)
assets=assets[ ,1:2] #Ensure no extraneuos data
colnames(assets)[1]='ComputerName';colnames(assets)[2]='SiteCode'
assets=assets[!is.na(assets["ComputerName"]), ] #Complete Cases only
assets$SiteCode=as.factor(assets$SiteCode)
#######################
Asset.Data = select(assets, everything() ) %>%
group_by(SiteCode) %>%
summarise(Assets=length(SiteCode))
Asset.Total = select(assets, everything() ) %>%
summarise(Assets=length(SiteCode))
Asset.Total$SiteCode = "NN"; Asset.Total=Asset.Total[ ,c(2,1)]
Assets.Complete=rbind(Asset.Total,Asset.Data)
Rollup=join(Rollup, Assets.Complete, by = "SiteCode")
#Total assets for region
Region=length(assets$SiteCode);
#total iava for region
IAVA=sum(summary$Total)
#unique IAVM
Region.IAVM.Count=length(unique(summary$IAVM))
#######################################################
#IAVM data
#load(file = file.path(archive_data,"summary.rds"))
IAVM<-summary#.bu
IAVM=IAVM[IAVM$IAVM != "NotNeeded", ]
IAVM$Year = sapply(strsplit(as.character(IAVM$IAVM), "\\-"), "[", 1)
IAVM.Year = select(IAVM, -Host.Total, -As.of.Date) %>%
group_by(HRP.name,Year,Severity) %>%
summarise(IAVM.Count=length(unique(IAVM)))
IAVM.cht <- ggplot(IAVM.Year, aes(x = Severity, y = IAVM.Count, fill = HRP.name  )) +
geom_bar(stat='identity') +
#geom_text(aes(label = IAVM.Count, y = IAVM.Count*1.05), size = 3) +
facet_grid(~ Year ) + #scales = 'free'
scale_colour_hue(c=4, l = 80) + #higher l is darker
#scale_y_continuous(labels = comma) +
xlab('') +
ylab('Amount of IAVMs') +
ggtitle(paste('All Open IAVMs in Region as of ', sum.max.date, sep="")) +
theme(legend.position = "bottom", axis.text.x=element_text(angle=20, vjust = 1,hjust=1)) #legend could be bottomt
ggsave(file.path(proj_path,"Open IAVM.png"),width=10, height=7)
###
# remove all R objects in the working directory
rm(list=ls(all=TRUE))
#Increase memory size (java out of memory and must be before pkg load)
options(java.parameters = "-Xmx15000m")
# id packages
packages <- c("plyr","dplyr","readxl", "zoo",  "stringi", "ggplot2","tidyr","stringr")
#install and library
lapply(packages, require, character.only = TRUE)
#set folders
proj_name = "IAVA Scorecard"
base_path="C:/Users/Stephen.M.Trask/Documents"
severity_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA Severity Summary Reports CSV Format"
summary_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA Summary Reports CSV Format"
archive_data="S:/CISO/ACAS/ACAS IAVA Reports/IAVA SCORECARD ARCHIVE DATA"
report="S:/CISO/ACAS/ACAS IAVA Reports"
code.plc='H:/Code Source/IAVA_Aggregation_Reporting'
#set project path
proj_path = paste(base_path,"/",proj_name,sep = "")
out_path = file.path(proj_path, "Output")
cleaned_path = file.path(proj_path, "CleanData")
data_path = file.path(proj_path, "RawData")
Outlier_Path  = file.path(proj_path, "Outliers")
Asset_path="S:/CISO/ACAS/ACAS IAVA Reports/Current Asset Numbers/Total Assets by HRP.xlsx"
dir.create(file.path(proj_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(out_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(cleaned_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(data_path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
dir.create(file.path(Outlier_Path), showWarnings = FALSE, recursive = FALSE, mode = "0777")
#Get Date
age= 100
date <- Sys.Date()
#Get File names
severity.files <- list.files(severity_data, pattern="*.csv", recursive = F, full.names=F, all.files = T, include.dirs = T)
summary.files <- list.files(summary_data, pattern="*.csv", recursive = F, full.names=F, all.files = T, include.dirs = T)
#asset.file <- list.files(Asset_path, pattern="*.xlsx", recursive = F, full.names=F, all.files = T, include.dirs = T)
#EMPTY DATAFRAMES
severity=as.data.frame(matrix( ,0,3))
summary=as.data.frame(matrix( ,0,4))
#nvl=as.data.frame(matrix( ,0,2))
#no.Vulnerabilities =matrix( ,0,2)
no.Vulnerabilities.lst=as.list(NULL)
severity.files
